version: "3"

services:
  mysql:
    image: "mysql:8.0"
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ssafy
      MYSQL_DATABASE: love
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
    networks:
      - backend

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - backend

  discoveryservice:
    image: discoveryservice:latest
    container_name: discoveryservice
    build:
      context: ./discoveryservice
      dockerfile: Dockerfile
    environment:
      - EUREKA_INSTANCE_HOSTNAME=www.love-signal.kr
      - EUREKA_INSTANCE_IP_ADDRESS=13.125.99.25
    ports:
      - "8761:8761"
    restart: always
    networks:
      - backend

  apigateway:
    image: apigateway:latest
    container_name: apigateway
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - discoveryservice
    restart: always
    networks:
      - backend

  config:
    image: config:latest
    container_name: config
    build:
      context: ./config
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - discoveryservice
    restart: always
    networks:
      - backend

  member-service:
    image: member-service:latest
    container_name: member-service
    build:
      context: ./MemberService
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - apigateway
      - config
      - mysql
      - redis
    restart: always
    networks:
      - backend

  team-service:
    image: team-service:latest
    container_name: team-service
    build:
      context: ./TeamService
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - apigateway
      - config
      - mysql
      - redis
    restart: always
    networks:
      - backend

  chatting-service:
    image: chatting-service:latest
    container_name: chatting-service
    build:
      context: ./chatting-service
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - apigateway
      - config
      - mysql
      - redis
    restart: always
    networks:
      - backend

  file-service:
    image: file-service:latest
    container_name: file-service
    build:
      context: ./file-service
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - apigateway
      - config
      - mysql
      - redis
    restart: always
    networks:
      - backend

volumes:
  mysql-data:
  redis-data:

networks:
  backend:
